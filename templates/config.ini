################################################
### OpenSpirulina.com
### 
### Configuration in boot time
################################################

#####
## Define if the debug mode (by serial port) is enabled or not
#####
[debug]
enabled = true


#####
## Liquid Crystal Display configuration
#####
[LCD]
enabled = true


#####
## Real Time Clock (RTC) configuration
#####
[RTC]
enabled = true


#####
## SD card configuration
#####
[SD_card]
save_on_sd = true


#####
## DHT sensors configuration
##    sensor[N].pin: Indicates the pin where the DHT sensor is connected
##    Ex. sensor1.pin = 7  (Sensor 1 connected on pin D7)
#####
[sensors:DHT]
sensor1.pin = 32


#####
## Lux sensor BH1750 configuration
##    Indicate in addr_pin the ADDR pin that must be in HIGH mode to assign
##    the indicated address. If addr_pin=0, no specific output will be
##    assigned to Vcc.
##
##    Possible addresses: 0x23 or 0x5C. Specify the addresses in hex format
##    addr_pin : Specify the values in decimal format
##    n_samples: Number of samples read from sensor
#####
[sensor:lux]
address = 0x5C
addr_pin = 34
n_samples = 10


#####
## Optical Sensity sensor (based on BH1750 sensor) configuration
##
##    Possible addresses: 0x23 or 0x5C. Specify the addresses in hex format
##    Pin: Pintout for red, green & blue LEDs.
##         Specify the values in decimal format
#####
[sensor:DO]
address = 0x23
led_R_pin = 24
led_G_pin = 28
led_B_pin = 26
n_samples = 10


#####
## pH sensors configuration
##    sensor[N].pin: Indicates the pin where the pH sensor is connected
##    Ex. sensor1.pin = 7  (Sensor 1 connected on pin D7)
#####
[sensors:pH]
sensor1.pin = 64


#####
## Waterproof digital sensors (type BS18B20) configuration
##    one_wire_pin: Define in which pin the OneWire channel is connected
##    addr_t[N]_s: Indicates the address for surface sensor pair
##    addr_t[N]_b: Indicates the address for background sensor pair
##
##    Note: The sensors must be defined in pairs (surface & background)
#####
[sensors:wp_temp]
one_wire_pin = 30

;Define Temp1 sensors pair
addr_t1_b = 0x28, 0xFF, 0x72, 0x88, 0x24, 0x17, 0x03, 0x09
addr_t1_s = 0x28, 0xFF, 0x1B, 0xD2, 0x24, 0x17, 0x03, 0x28
;Define Temp2 sensors pair
addr_t2_b = 0x28, 0xFF, 0xCA, 0xE5, 0x80, 0x14, 0x02, 0x16
addr_t2_s = 0x28, 0xFF, 0x89, 0xBB, 0x60, 0x17, 0x05, 0x6D


#####
## Current sensors configuration
##    Valid format:
##      sensor[N] = {pin}, {sensor_model}, {var}
##
##    {pin} Indicates the pin where the current sensor is connected
##    {sensor_model} The connected sensor model
##       acs712 -> For invasive sensor
##       sct013 -> For non invasive sensor with internal burden resistence
##    {var} Indicates the variation value.
##       For acs712 model, indicates the sensitivity (in mV/A)
##       For sct013 model, indicates the Ampere value of the clamp
#####
[sensors:current]
sensor1 = 67, sct013, 20
sensor2 = 68, sct013, 20





# Send information to old server
[report:http_v1]
enabled = true
id_arduino = 21;
pin_arduino = 12345;
server = sensors.openspirulina.com
port = 80;

# Ethernet configuration
[net:ethernet]
mac = de:ad:be:ef:fe:ed

# Your GPRS credentials
# Leave empty, if missing user or pass
[net:gprs]
apn  = internet
user =
pass =

# Indicates the type of connection used to send the data
# to the remote server
#
# Valid types:
#   none     - No data is send 
#   ethernet - Uses ethernet mode
#   grps     - Uses GPRS mode
#   wifi     - Not implemented jet
[connection]
conn_type = none


